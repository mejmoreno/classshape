#include <iostream>

using namespace std;

class Shape {
protected:
    double base;
    double height;

public:
    void getData() {
        cout << "Enter base and height: ";
        cin >> base >> height;
    }

    virtual double calculateArea() const = 0;

    void displayArea() const {
        cout << "Area is ";
    }
};

class Triangle : public Shape {
public:
    double calculateArea() const override {
        return 0.5 * base * height;
    }

    void displayArea() const {
        Shape::displayArea();
        cout << "of triangle is " << calculateArea() << endl;
    }
};

class Rectangle : public Shape {
public:
    double calculateArea() const override {
        return base * height;
    }

    void displayArea() const {
        Shape::displayArea();
        cout << "of rectangle is " << calculateArea() << endl;
    }

    void getData() {
        cout << "Enter length and width: ";
        cin >> base >> height;
    }
};

int main() {
    Triangle triangle;
    triangle.getData();
    triangle.displayArea();

    Rectangle rectangle;
    rectangle.getData();
    rectangle.displayArea();

    return 0;
}
